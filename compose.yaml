# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker compose reference guide at
# https://docs.docker.com/compose/compose-file/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  course-service:
    environment:
      - ASPNETCORE_URLS=http://0.0.0.0:6810
    build:
      context: .
      target: final
    ports:
      - 6810:6810

# The commented out section below is an example of how to define a PostgreSQL
# database that your application can use. `depends_on` tells Docker Compose to
# start the database before your application. The `db-data` volume persists the
# database data between container restarts. The `db-password` secret is used
# to set the database password. You must create `db/password.txt` and add
# a password of your choosing to it before running `docker compose up`.
    depends_on:
      db:
        condition: service_started
        
  course-database:
    image: postgres:16.1-alpine
    user: postgres
    secrets:
      - db-password
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=course
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
    ports:
      - 6811:6811
    command: postgres -c listen_addresses='*' -c port=6811

volumes:
  db-data:
secrets:
  db-password:
    file: db/password.txt
    